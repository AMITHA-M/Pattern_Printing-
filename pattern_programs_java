
1) Solid Rectangle: 
    * * * * *
    * * * * *
    * * * * *
    * * * * *	

Solution:

public class Main{
    public static void main(String args[]){
       
        for(int r=1;r<=4;r++){  			//row count
            for(int c=1;c<=5;c++){  		//col count
                System.out.print("#");
            }
            System.out.println();
        }
        
    }
}


2)Hallow Rectangle:
  * * * * *
  *       *
  * * * * * 

Solution:
public class Main{
    public static void main(String args[]){
        
        int n=3;
        int m=5;
        for(int r=1;r<=n;r++){
            for(int c=1;c<=m;c++){
                if(r==1||c==1||r==n||c==m){
                    System.out.print("* ");
                }else{
                    System.out.print("  ");
                }
                
            }
            System.out.println();
        }
        
    }
}

3)Half_Pyramid

*
* *
* * *
* * * *
Solution:

public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=4;
        
        for(int r=1;r<=n;r++){
            for(int c=1;c<=r;c++){    
                System.out.print("* ");
            }
            System.out.println();
        }
    }
}
4)Inverted_half_pyramid
* * * *
* * * 
* * 
*
solution:
public class Main{
    public static void main(String args[]){
        int n=4;
        for(int r=n;r>=1;r--){
            for(int c=1;c<=r;c++){
                System.out.print("* ");
            }
            System.out.println();
        }
    }
}

5)half_pyramid(rotated 180 degree)|| Right side triangle
      *
    * *
  * * *
* * * *
Solution:
class Main{
    public static void main(String args[]){
        int n=4;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
    }
}

6)half_pyramid(numbers)
    1
    1 2
    1 2 3
    1 2 3 4
    1 2 3 4 5
Solution:

public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=5;
        //int m=5;
        for(int r=1;r<=n;r++){
            for(int c=1;c<=r;c++){
                System.out.print(c);
            }
            System.out.println();
        }
        
    }
}
7)Floyd's triangle:
       1
       2  3
       4  5  6
       7  8  9  10
       11 12 13 14 15
Solution:
public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=5;
        int number=1;
        for(int r=1;r<=n;r++){
            for(int c=1;c<=r;c++){
                System.out.print(number+" ");
                number++;
            }
            System.out.println();
        }
    }
}

8)0-1 triangle:
       1
       0 1
       1 0 1
       0 1 0 1
       1 0 1 0 1
Solution:
public class Main
{
	public static void main(String[] args) {
		int n=5;
		for(int i=1;i<=n;i++){
		    for(int j=1;j<=i;j++){
		        int sum=i+j;
		    if(sum%2==0){
		        System.out.print("1 ");
		    }
		    else{
		        System.out.print("0 ");
		    }
		        
		    }
		    System.out.println();
		}
	}
}
9)Butterfly pattern:
   
       *        *
       **      **
       ***    ***
       ****  ****
       **********
       ****  ****
       ***    ***
       **      **
       *        *
Solution:
public class Main
{
	public static void main(String[] args){
	    int n=4;
	    for(int i=1;i<=n;i++){
	        for(int j=1;j<=i;j++){
	            System.out.print("* ");
	        }
	        // Space 
	        int spaces=2*(n-i);
	        for(int j=1;j<=spaces;j++){
	            System.out.print("  ");
	        }
	        for(int j=1;j<=i;j++){
	            System.out.print("* ");
	        }
	        System.out.println();
	    }
	    //2nd half
	    for(int i=n;i>=1;i--){
	        for(int j=1;j<=i;j++){
	            System.out.print("* ");
	        }
	        // Space 
	        int spaces=2*(n-i);
	        for(int j=1;j<=spaces;j++){
	            System.out.print("  ");
	        }
	        for(int j=1;j<=i;j++){
	            System.out.print("* ");
	        }
	        System.out.println();
	    }
	}
}
10)star hill pattern
         *
        * *
       * * *
      * * * *
     * * * * *
Solution:

public class Main
{
	public static void main(String[] args) {
		int n=5;
		
		for(int i=1;i<=n;i++){
		    for(int j=1;j<=n-i;j++){
		        System.out.print(" ");
		    }for(int j=1;j<=i;j++){
		        System.out.print("*"+" ");
		    }
		    System.out.println();
		}
	}
}


11)Palindrome pattern:
            1
          2 1 2
        3 2 1 2 3
      4 3 2 1 2 3 4
    5 4 3 2 1 2 3 4 5
solution:


public class Main
{
	public static void main(String[] args) {
		int n=5;
		for(int i=1;i<=n;i++){
		    for(int j=1;j<=n-i;j++){
		        System.out.print(" ");
		    }
		    //1st half
		    for(int j=i;j>=1;j--){   
		        System.out.print(j);
		    }
		    for(int j=2;j<=i;j++){    
		        System.out.print(j);
		    }
		    System.out.println();
		}
		
	}
}






